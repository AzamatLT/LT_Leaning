Открытая и закрытая модели нагрузки — это два подхода к нагрузочному тестированию, которые отличаются способом управления виртуальными пользователями (VU) и их поведением. Давайте разберём их подробнее.

Открытая модель нагрузки
Что это?
В открытой модели нагрузка создаётся независимо от времени ответа системы. Новые виртуальные пользователи (VU) добавляются в систему с определённой интенсивностью, независимо от того, как быстро система обрабатывает запросы.

Как работает?
Тест задаёт интенсивность запросов (например, 100 запросов в секунду).

Новые запросы создаются с заданной частотой, даже если предыдущие запросы ещё не завершены.

Пример:
Вы хотите отправить 100 запросов в секунду.

Если система замедляется, новые запросы всё равно будут создаваться, что может привести к увеличению очереди и дальнейшему замедлению.

Когда использовать?
Когда нужно имитировать реальную нагрузку, например, на веб-сайт, где пользователи независимо друг от друга отправляют запросы.

Для тестирования устойчивости системы к высокой нагрузке.

Преимущества:
Более реалистичное моделирование нагрузки.

Позволяет выявить узкие места при высокой интенсивности запросов.

Недостатки:
Может привести к перегрузке системы, если она не справляется с нагрузкой.

Требует тщательного контроля, чтобы не вызвать сбой системы.

Закрытая модель нагрузки
Что это?
В закрытой модели нагрузка зависит от времени ответа системы. Новые виртуальные пользователи (VU) добавляются только после завершения предыдущих запросов.

Как работает?
Тест задаёт количество виртуальных пользователей (например, 100 VU).

Новый запрос создаётся только после завершения предыдущего.

Пример:
Вы запускаете 100 виртуальных пользователей.

Каждый пользователь отправляет запрос и ждёт ответа, прежде чем отправить следующий.

Когда использовать?
Когда нужно имитировать фиксированное количество пользователей, например, в системе с ограниченным числом подключений.

Для тестирования производительности системы при определённой нагрузке.

Преимущества:
Более контролируемая нагрузка.

Позволяет оценить производительность системы при фиксированном количестве пользователей.

Недостатки:
Менее реалистичное моделирование нагрузки, так как не учитывает независимое поведение пользователей.

Не подходит для тестирования устойчивости к пиковым нагрузкам.

Сравнение открытой и закрытой моделей

Характеристика					Открытая модель					Закрытая модель
Управление нагрузкой			Интенсивность запросов			Количество виртуальных пользователей
Зависимость от времени ответа	Нет								Да
Реалистичность					Более реалистичная				Менее реалистичная
Использование					Тестирование устойчивости		Тестирование производительности
Риск перегрузки системы			Высокий							Низкий

Примеры использования
Открытая модель:
Тестирование веб-сайта, где пользователи независимо отправляют запросы.

Нагрузочное тестирование API с высокой интенсивностью запросов.

Закрытая модель:
Тестирование системы с ограниченным числом подключений (например, база данных).

Оценка производительности системы при фиксированном количестве пользователей.

Как выбрать модель?
Открытая модель:

Если нужно имитировать реальную нагрузку.

Если цель — проверить устойчивость системы к пиковым нагрузкам.

Закрытая модель:

Если нужно контролировать количество пользователей.

Если цель — оценить производительность системы при фиксированной нагрузке.

Пример в k6
Открытая модель:
javascript
Copy
import http from 'k6/http';
import { sleep } from 'k6';

export const options = {
  scenarios: {
    constant_request_rate: {
      executor: 'constant-arrival-rate',
      rate: 100, // 100 запросов в секунду
      timeUnit: '1s',
      duration: '1m',
      preAllocatedVUs: 50,
      maxVUs: 200,
    },
  },
};

export default function () {
  http.get('https://test.k6.io');
  sleep(1);
}
Закрытая модель:
javascript
Copy
import http from 'k6/http';
import { sleep } from 'k6';

export const options = {
  scenarios: {
    constant_vus: {
      executor: 'constant-vus',
      vus: 100, // 100 виртуальных пользователей
      duration: '1m',
    },
  },
};

export default function () {
  http.get('https://test.k6.io');
  sleep(1);
}
Заключение
Открытая модель подходит для тестирования устойчивости системы к высокой нагрузке.

Закрытая модель используется для оценки производительности при фиксированном количестве пользователей.

Выбор модели зависит от целей тестирования и характеристик системы